import("rtt_ros")
ros.import("cart_opt_ctrl")
require("print")

loadComponent("CartOptCtrl","lwr::CartOptCtrl")
loadComponent("Solver","RTTCartOptSolver")

CartOptCtrl.trajectory_frame="ati_link"

CartOptCtrl.use_sim_clock = true
Solver.use_sim_clock = true

setActivity("Solver",0,HighestPriority,ORO_SCHED_RT)
setActivity("CartOptCtrl",0.001,HighestPriority-3,ORO_SCHED_RT)

connectPeers("CartOptCtrl","Solver")
connectPeers("CartOptCtrl","lwr_sim")
connectPeers("Solver","lwr_sim")

var ConnPolicy cp = ConnPolicy()

connect("CartOptCtrl.q","Solver.q",cp)
connect("CartOptCtrl.qdot","Solver.qdot",cp)
connect("CartOptCtrl.dt","Solver.dt",cp)
connect("CartOptCtrl.jac","Solver.jac",cp)
connect("CartOptCtrl.mass","Solver.mass",cp)
connect("CartOptCtrl.jdot_qdot","Solver.jdot_qdot",cp)
connect("CartOptCtrl.coriolis","Solver.coriolis",cp)
connect("CartOptCtrl.gravity","Solver.gravity",cp)
connect("CartOptCtrl.xdd_des","Solver.xdd_des",cp)
connect("CartOptCtrl.optimize","Solver.optimize",cp)
connect("Solver.torque_out","lwr_sim.JointTorqueCommand",cp)

stream("CartOptCtrl.ati_ft_data_in", ros.comm.topic("ft_sensor/wrench"))
connect("CartOptCtrl.add_torque","Solver.add_torque",cp)


print.ln("Configuring Solver")
Solver.configure()
print.ln("Configuring CartOptCtrl")
CartOptCtrl.configure()
