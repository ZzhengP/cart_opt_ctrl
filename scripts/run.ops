// Import base script
import("rtt_rospack")
runScript(ros.find("lwr_utils")+"/scripts/utils.ops")

// Load robot
loadRobot(getRobotName(),isSim(),true)
loadStatePublisher(true)

// Set initial robot configuration
if (isSim()) then
  setRobotInitialJointConfiguration(1.0,0.,0.0,-1.57,0.0,1.57,0.)
setJointTorqueControlMode()

import("rtt_ros")
import("rtt_dynamic_reconfigure")

// Load controller component
ros.import("cart_opt_ctrl")

loadComponent("KDLTrajCompute","KDLTrajCompute")
setActivity("KDLTrajCompute",0.001,60,ORO_SCHED_RT)
loadService("KDLTrajCompute","rosservice")
KDLTrajCompute.rosservice.connect("updateWaypoints","/KDLTrajCompute/updateWaypoints","cart_opt_ctrl/UpdateWaypoints")
stream("KDLTrajCompute.PathROSOut",ros.comm.topic("KDLTrajGen/path"))
stream("KDLTrajCompute.PathPosesROSOut",ros.comm.topic("KDLTrajGen/pose_array"))
stream("KDLTrajCompute.ButtonPressed",ros.comm.topic("/activate_gravity"))
loadService("KDLTrajCompute", "reconfigure")
KDLTrajCompute.reconfigure.min.vel_max = 0.0
KDLTrajCompute.reconfigure.max.vel_max = 0.5
KDLTrajCompute.reconfigure.min.acc_max = 0.0
KDLTrajCompute.reconfigure.max.acc_max = 3.0
KDLTrajCompute.reconfigure.min.radius = 0.0
KDLTrajCompute.reconfigure.max.radius = 0.04
KDLTrajCompute.reconfigure.min.eqradius = 0.0
KDLTrajCompute.reconfigure.max.eqradius = 0.1
KDLTrajCompute.reconfigure.advertise("/KDLTrajCompute")

loadComponent("CartOptCtrl","CartOptCtrl")
// setActivity("CartOptCtrl",0.001,HighestPriority-3,ORO_SCHED_RT)
setActivity("CartOptCtrl",0.001,50,ORO_SCHED_RT)
loadService("CartOptCtrl","rosservice")
CartOptCtrl.rosservice.connect("getCurrentPose","/CartOptCtrl/getCurrentPose","cart_opt_ctrl/GetCurrentPose")

// Connect controller
connectPeers("CartOptCtrl",getRobotName())
connectStandardPorts("CartOptCtrl",getRobotName(),ConnPolicy())
connectPeers("CartOptCtrl","KDLTrajCompute")
connect("KDLTrajCompute.TrajectoryPointPosOut","CartOptCtrl.TrajectoryPointPosIn",ConnPolicy())
connect("KDLTrajCompute.TrajectoryPointVelOut","CartOptCtrl.TrajectoryPointVelIn",ConnPolicy())
connect("KDLTrajCompute.TrajectoryPointAccOut","CartOptCtrl.TrajectoryPointAccIn",ConnPolicy())
stream("CartOptCtrl.PoseDesired",ros.comm.topic("CartOptCtrl/PoseDesired"))
stream("CartOptCtrl.JointPosVelIn",ros.comm.topic("CartOptCtrl/JointPosVelIn"))
stream("CartOptCtrl.PoseErrorOut",ros.comm.topic("CartOptCtrl/PoseError"))
stream("CartOptCtrl.ButtonPressed",ros.comm.topic("/activate_gravity"))
stream("CartOptCtrl.HumanPose",ros.comm.topic("/kinect_merge/closest_pt_tracking"))
stream("CartOptCtrl.Ec_lim",ros.comm.topic("/cart_opt_ctrl/ec_lim"))
stream("CartOptCtrl.Ec_predicted",ros.comm.topic("/cart_opt_ctrl/ec_predicted"))
stream("CartOptCtrl.FTData",ros.comm.topic("/ft_sensor/wrench"))

// Configure & start trajectory sender
configureComponent("KDLTrajCompute")
startComponent("KDLTrajCompute")

// Configure & start controller
configureComponent("CartOptCtrl")
startComponent("CartOptCtrl")