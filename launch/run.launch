<?xml version="1.0" encoding="UTF-8" ?>
<launch>
  <!--============ ATI F/T Sensor Params ============-->

  <!-- The ATI Sensor default ip -->
  <arg name="ft_ip" default="192.168.100.103"/>
  <!-- The ATI Sensor calibration index (-1 is 'use default') -->
  <arg name="ft_calibration_index" default="-1"/>
  <!-- The name of the Wrench frame -->
  <arg name="ft_frame" default="ati_link"/>

  <!-- The parameters that the ft_component sensor will get -->
  <rosparam ns="ft_sensor" subst_value="true">
    ip: $(arg ft_ip)
    calibration_index: $(arg ft_calibration_index)
    frame: $(arg ft_frame)
  </rosparam>

  <!--============ LWR Runner script Params ========-->

  <!-- The end effector frame (you'll be able to use frames <= tip_link for cartesian position, jacobians etc.) -->
  <arg name="tip_link" default="ati_link"/>
  <!-- The root_link will be frame used for sending goals to the cartesian controller -->
  <arg name="root_link" default="base_link"/>
  <!-- Run Simulated robot (need to 'roslaunch rtt_lwr_gazebo lwr_gazebo.launch' first) -->
  <arg name="sim" default="false" />
  <!-- The global namespace if you need to change it (unlikely) -->
  <arg name="robot_ns" default="/"/>
  <!-- Run in GDB -->
  <arg name="debug" default="false" />
  <!-- Launch rviz -->
  <arg name="rviz" default="false" />
  <!-- The level of verbose (never, fatal, critical, error, warning, info, debug, realtime) -->
  <arg name="log_level" default="error" />
  <!-- Tools -->
  <arg name="load_base" default="true" />
  <arg name="load_table" default="true" />
  <arg name="load_ati_sensor" default="true" />
  <arg name="load_handle" default="true" />
  <arg name="load_calib_tool" default="false" />
  <!-- Gazebo -->
  <arg name="gazebo_gui" default="false"/>
  
  <!-- Arg to use ros_control instead of a orocos component, not fully supported yet -->
  <arg name="use_ros_control" default="false"/> 
  
  <group unless="$(arg use_ros_control)">
    <!--============ CartOptCtrl Params ============-->
    <rosparam ns="CartOptCtrl" subst_value="true">
      torque_max : [175.0, 175.0, 99.0, 99.0, 99.0, 37.0, 37.0]
      joint_vel_max : [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
      p_gains : [1080.0, 1080.0, 1080.0, 1080.0, 1080.0, 1080.0]
      d_gains : [22.0, 22.0, 22.0, 22.0, 22.0, 22.0]
      position_saturation : 0.01
      orientation_saturation : 0.0314
      regularisation_weight : 0.000001
      compensate_gravity : true
      damping_weight : [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
      cart_min_constraints : [-0.6, -0.25, 0.05]
      cart_max_constraints : [0.9, 0.5, 0.8]
      horizon_steps : 15
      base_frame : "$(arg root_link)"
      frame_of_interest : "ati_link"
      select_components_0 : [1,1,1,1,1,1]
      select_axes_0 : [1,1,1,1,1,1,1]
      select_components_1 : [0,0,0,0,0,0]
      select_axes_1 : [0,0,0,0,0,0,0]
      select_components_2 : [0,0,0,0,0,0]
      select_axes_2 : [0,0,0,0,0,0,0]
      select_components_3 : [0,0,0,0,0,0]
      select_axes_3 : [0,0,0,0,0,0,0]
      select_components_4 : [0,0,0,0,0,0]
      select_axes_4 : [0,0,0,0,0,0,0]
      select_components_5 : [0,0,0,0,0,0]
      select_axes_5 : [0,0,0,0,0,0,0]
    </rosparam>
    
    <!--============ KDLTrajCompute Params ============-->
    <rosparam ns="KDLTrajCompute" subst_value="true">
      base_frame : $(arg root_link)
      vel_max : 0.1
      acc_max : 2.0
      radius : 0.01
      eqradius : 0.05
    </rosparam>
  </group>

  <!--============ LWR Runner script ===============-->

  <include file="$(find lwr_utils)/launch/run.launch">
    <arg name="sim" value="$(arg sim)" />
    <arg if="$(arg use_ros_control)" name="ops_script" value="$(find cart_opt_ctrl)/scripts/run_ros_control.ops"/>
    <arg unless="$(arg use_ros_control)" name="ops_script" value="$(find cart_opt_ctrl)/scripts/run.ops"/>
    <arg name="robot_ns" value="$(arg robot_ns)"/>
    <arg name="debug" value="$(arg debug)" />
    <arg if="$(arg use_ros_control)" name="rviz" value="false" />
    <arg unless="$(arg use_ros_control)" name="rviz" value="$(arg rviz)" />
    <arg name="log_level" value="$(arg log_level)" />
    <arg name="tip_link" value="$(arg tip_link)"/>
    <arg name="root_link" value="$(arg root_link)"/>
    <arg name="load_base" value="$(arg load_base)" />
    <arg name="load_table" value="$(arg load_table)" />
    <arg name="load_ati_sensor" value="$(arg load_ati_sensor)" />
    <arg name="load_calib_tool" value="$(arg load_calib_tool)" />
    <arg name="load_handle" value="$(arg load_handle)" />
    <arg name="gazebo_gui" value="$(arg gazebo_gui)"/>
  </include>

  <group if="$(arg use_ros_control)">
    <arg name="launch_moveit" default="true"/>
    <arg name="spawn_ros_controllers" default="joint_state_controller cart_opt_controller"/>
    <rosparam command="load" file="$(find cart_opt_ctrl)/config/controller_params.yaml"/>

    <include file="$(find lwr_moveit_config)/launch/lwr.launch" if="$(arg launch_moveit)">
      <arg name="moveit_rviz" value="$(arg rviz)"/>
    </include>

    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
      output="screen" args="$(arg spawn_ros_controllers)"/>
  </group>
</launch>
